;18-649 Fall 2013
;Group 18
;Yi Huo (yhuo)
;Mustafa Bilgen (mbilgen)
;Sairam Krishnan (sbkrishn)
;Abhijit Lele(alele)
;
;Door Control Unit Test # 2 - Same basic tests as Unit Test #1 except for the back door now
;
;Inputs:
;   mAtFloor[f, b]
;   mDriveSpeed
;   mDesiredFloor
;   mDesiredDwell[b]
;   mDoorClosed[b, r]
;   mDoorOpened[b, r]
;   mDoorReversal[b, r]
;   mCarCall[f, b]
;   mHallCall[f, b, d]
;   mCarWeight
;
;Outputs:
;   DoorMotor[b,r]

#INCLUDE defines.mf

;Initialize - Elevator has stopped at the desired floor and hallway. The desired direction is STOP.
0.0s I AT_FLOOR_PERIOD N AT_FLOOR_[1][BACK]_CAN_ID AtFloor 1 BACK = true
0.0s I DISPATCHER_PERIOD N DESIRED_FLOOR_CAN_ID DesiredFloor = 1 STOP BACK

;Drive speed is zero, but direction is up.
0.0s I DRIVE_CONTROL_PERIOD N DRIVE_SPEED_CAN_ID DriveSpeed = 0.0 UP

;All doors are closed, and no door reversals have been triggered.
0.0s I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][LEFT]_CAN_ID DoorClosed FRONT LEFT = true
0.0s I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[FRONT][RIGHT]_CAN_ID DoorClosed FRONT RIGHT = true
0.0s I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][LEFT]_CAN_ID DoorClosed BACK LEFT = true
0.0s I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][RIGHT]_CAN_ID DoorClosed BACK RIGHT = true
0.0s I DOOR_REVERSAL_NETWORK_PERIOD N DOOR_REVERSAL_SENSOR_[BACK][LEFT]_CAN_ID DoorReversal BACK LEFT = false
0.0s I DOOR_REVERSAL_NETWORK_PERIOD N DOOR_REVERSAL_SENSOR_[BACK][RIGHT]_CAN_ID DoorReversal BACK RIGHT = false

;Set DesiredDwell to 3 seconds.
0.0s I DISPATCHER_PERIOD N DESIRED_DWELL_[BACK]_CAN_ID DesiredDwell BACK = 3

;#transtion 'T.5.1'
;#state 'S.5.2: DOOR_OPENING' for back doors
0.31s A F DoorMotor BACK LEFT : command == OPEN
0.31s A F DoorMotor BACK RIGHT : command == OPEN
0.31s A S DoorControl[BACK][LEFT] : STATE == DOOR_OPENING
0.31s A S DoorControl[BACK][RIGHT] : STATE == DOOR_OPENING
;#state 'S.5.1: DOOR_CLOSED' for front doors
0.31s A F DoorMotor FRONT LEFT : command == STOP
0.31s A F DoorMotor FRONT RIGHT : command == STOP
0.31s A S DoorControl[FRONT][LEFT] : STATE == DOOR_CLOSED
0.31s A S DoorControl[FRONT][RIGHT] : STATE == DOOR_CLOSED

;Setup for transition 'T.5.2' - Elevator is stopped at the floor, and back doors are fully open.
0.9s I DOOR_OPENED_SENSOR_PERIOD N DOOR_OPEN_SENSOR_[BACK][LEFT]_CAN_ID DoorOpened BACK LEFT = true
0.9s I DOOR_OPENED_SENSOR_PERIOD N DOOR_OPEN_SENSOR_[BACK][RIGHT]_CAN_ID DoorOpened BACK RIGHT = true
;Update mDesiredFloor since it is fully computed by the time that the doors are fully open.
0.9s I DISPATCHER_PERIOD N DESIRED_FLOOR_CAN_ID DesiredFloor = 2 STOP BACK

;#transition 'T.5.2'
;#state 'S.5.3: DOOR_OPEN' for back doors
1.31s A F DoorMotor BACK LEFT : command == STOP
1.31s A F DoorMotor BACK RIGHT : command == STOP
1.31s A S DoorControl[BACK][LEFT] : STATE == DOOR_OPEN
1.31s A S DoorControl[BACK][RIGHT] : STATE == DOOR_OPEN
;#state 'S.5.1: DOOR_CLOSED' for front doors
1.31s A F DoorMotor FRONT LEFT : command == STOP
1.31s A F DoorMotor FRONT RIGHT : command == STOP
1.31s A S DoorControl[FRONT][LEFT] : STATE == DOOR_CLOSED
1.31s A S DoorControl[FRONT][RIGHT] : STATE == DOOR_CLOSED

;Check whether doors remain fully open as long as the car weight exceeds the elevator's MaxCapacity (14000).
1.4s I WEIGHT_PERIOD N CAR_WEIGHT_CAN_ID CarWeight = 14001
;#state 'S.5.3: DOOR_OPEN' for back doors
4.01s A F DoorMotor BACK LEFT : command == STOP
4.01s A F DoorMotor BACK RIGHT : command == STOP
4.01s A S DoorControl[BACK][LEFT] : STATE == DOOR_OPEN
4.01s A S DoorControl[BACK][RIGHT] : STATE == DOOR_OPEN
;#state 'S.5.1: DOOR_CLOSED' for front doors
4.01s A F DoorMotor FRONT LEFT : command == STOP
4.01s A F DoorMotor FRONT RIGHT : command == STOP
4.01s A S DoorControl[FRONT][LEFT] : STATE == DOOR_CLOSED
4.01s A S DoorControl[FRONT][RIGHT] : STATE == DOOR_CLOSED

;Setup for transition 'T.5.3' - Excess weight is offloaded from the elevator, and CountDown has expired.
5.0s I WEIGHT_PERIOD N CAR_WEIGHT_CAN_ID CarWeight = 14000
5.0s I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][LEFT]_CAN_ID DoorClosed BACK LEFT = false
5.0s I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][RIGHT]_CAN_ID DoorClosed BACK RIGHT = false

;#transition 'T.5.3' - After CountDown timer expires, doors start closing.
;#state 'S.5.4: DOOR_CLOSING' for back doors
5.41s A F DoorMotor BACK LEFT : command == CLOSE
5.41s A F DoorMotor BACK RIGHT : command == CLOSE
5.41s A S DoorControl[BACK][LEFT] : STATE == DOOR_CLOSING
5.41s A S DoorControl[BACK][RIGHT] : STATE == DOOR_CLOSING
;#state 'S.5.1: DOOR_CLOSED' for front doors
5.41s A F DoorMotor FRONT LEFT : command == STOP
5.41s A F DoorMotor FRONT RIGHT : command == STOP
5.41s A S DoorControl[FRONT][LEFT] : STATE == DOOR_CLOSED
5.41s A S DoorControl[FRONT][RIGHT] : STATE == DOOR_CLOSED

;If mCarWeight <= MaxCarCapacity but mDoorClosed is false, check if we remain in 'S.5.4'.
;In other words, let the doors continue to close as long as the car is not overweight.
;We are also assuming that the door reversal sensors have picked up nothing.
;#state 'S.5.4: DOOR_CLOSING' for back doors
6.01s A F DoorMotor BACK LEFT : command == CLOSE
6.01s A F DoorMotor BACK RIGHT : command == CLOSE
6.01s A S DoorControl[BACK][LEFT] : STATE == DOOR_CLOSING 
6.01s A S DoorControl[BACK][RIGHT] : STATE == DOOR_CLOSING
;#state 'S.5.1: DOOR_CLOSED' for front doors
6.01s A F DoorMotor FRONT LEFT : command == STOP
6.01s A F DoorMotor FRONT RIGHT : command == STOP
6.01s A S DoorControl[FRONT][LEFT] : STATE == DOOR_CLOSED
6.01s A S DoorControl[FRONT][RIGHT] : STATE == DOOR_CLOSED

;Setup for transition 'T.5.4' - Doors are completely closed.
6.1s I WEIGHT_PERIOD N CAR_WEIGHT_CAN_ID CarWeight = 14000
6.1s I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][LEFT]_CAN_ID DoorClosed BACK LEFT = true
6.1s I DOOR_CLOSED_SENSOR_PERIOD N DOOR_CLOSED_SENSOR_[BACK][RIGHT]_CAN_ID DoorClosed BACK RIGHT = true

;#transition 'T.5.4'
;#state 'S.5.1: DOOR_CLOSED' for back doors
6.51s A F DoorMotor BACK LEFT : command == STOP
6.51s A F DoorMotor BACK RIGHT : command == STOP
6.51s A S DoorControl[BACK][LEFT] : STATE == DOOR_CLOSED
6.51s A S DoorControl[BACK][RIGHT] : STATE == DOOR_CLOSED
;#state 'S.5.1: DOOR_CLOSED' for front doors
6.51s A F DoorMotor FRONT LEFT : command == STOP
6.51s A F DoorMotor FRONT RIGHT : command == STOP
6.51s A S DoorControl[FRONT][LEFT] : STATE == DOOR_CLOSED
6.51s A S DoorControl[FRONT][RIGHT] : STATE == DOOR_CLOSED

;Ensure that transition 'T.5.1' does not occur if DriveSpeed is nonzero and direction is not STOP.
6.6s I DISPATCHER_PERIOD N DESIRED_FLOOR_CAN_ID DesiredFloor = 1 STOP BACK
6.6s I DRIVE_CONTROL_PERIOD N DRIVE_SPEED_CAN_ID DriveSpeed = 1 UP
;#state 'S.5.1: DOOR_CLOSED' for front doors
7.01s A F DoorMotor FRONT LEFT : command == STOP
7.01s A F DoorMotor FRONT RIGHT : command == STOP
7.01s A S DoorControl[FRONT][LEFT] : STATE == DOOR_CLOSED
7.01s A S DoorControl[FRONT][RIGHT] : STATE == DOOR_CLOSED
;#state 'S.5.1: DOOR_CLOSED' for back doors
7.01s A F DoorMotor BACK LEFT : command == STOP
7.01s A F DoorMotor BACK RIGHT : command == STOP
7.01s A S DoorControl[BACK][LEFT] : STATE == DOOR_CLOSED
7.01s A S DoorControl[BACK][RIGHT] : STATE == DOOR_CLOSED
